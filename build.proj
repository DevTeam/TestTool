<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<Import Project="Utils.targets" />  
	<Import Project="C:\Program Files\dotnet\sdk\1.0.0\Microsoft.TestPlatform.targets" Condition="Exists('C:\Program Files\dotnet\sdk\1.0.0\Microsoft.TestPlatform.targets')"/>

	<PropertyGroup>
		<BuildNumber Condition=" '$(BuildNumber)' == '' ">0</BuildNumber>
		<BuildType Condition=" '$(BuildType)' == '' ">-beta</BuildType>		

		<FrameworkAssemblyVersion>1.0.$(BuildNumber)</FrameworkAssemblyVersion>
		<FrameworkPackageVersion>1.0.$(BuildNumber)-beta</FrameworkPackageVersion>
		<AdapterAssemblyVersion>1.0.$(BuildNumber)</AdapterAssemblyVersion>
		<AdapterPackageVersion>1.0.$(BuildNumber)-beta</AdapterPackageVersion>
		<ContractsAssemblyVersion>1.0.$(BuildNumber)</ContractsAssemblyVersion>
		<ContractsPackageVersion>1.0.$(BuildNumber)-beta</ContractsPackageVersion>
		<AssemblyVersion>1.0.$(BuildNumber)</AssemblyVersion>
		<PackageVersion>1.0.$(BuildNumber)-beta</PackageVersion>

		<Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration>
		<PackagesDirectory>$(SolutionDir)packages</PackagesDirectory>	
	</PropertyGroup>

	<ItemGroup>
		<TestAssembly Include="DevTeam.IoC.Tests"/>

		<Package Include="DevTeam.TestAdapter">
			<CustomPack>true</CustomPack>
			<AssemblyVersion>$(FrameworkAssemblyVersion)</AssemblyVersion>
			<PackageVersion>$(FrameworkPackageVersion)</PackageVersion>
			<AssemblyInfoFile>DevTeam.TestAdapter\Properties\AssemblyInfo.cs</AssemblyInfoFile>
		</Package>
		<Package Include="DevTeam.TestEngine.Contracts">
			<AssemblyVersion>$(ContractsAssemblyVersion)</AssemblyVersion>
			<PackageVersion>$(ContractsPackageVersion)</PackageVersion>
			<AssemblyInfoFile>DevTeam.TestEngine.Contracts\Properties\AssemblyInfo.cs</AssemblyInfoFile>
		</Package>
		<Package Include="DevTeam.TestFramework">
			<AssemblyVersion>$(FrameworkAssemblyVersion)</AssemblyVersion>
			<PackageVersion>$(FrameworkPackageVersion)</PackageVersion>
			<AssemblyInfoFile>DevTeam.TestFramework\Properties\AssemblyInfo.cs</AssemblyInfoFile>
		</Package>
		<Package Include="DevTeam.TestEngine">
			<AssemblyVersion>$(AssemblyVersion)</AssemblyVersion>
			<PackageVersion>$(PackageVersion)</PackageVersion>
			<AssemblyInfoFile>DevTeam.TestEngine\Properties\AssemblyInfo.cs</AssemblyInfoFile>
		</Package>
		<Package Include="DevTeam.TestRunner">
			<CustomPack>true</CustomPack>
			<AssemblyVersion>$(AssemblyVersion)</AssemblyVersion>
			<PackageVersion>$(PackageVersion)</PackageVersion>
			<AssemblyInfoFile>DevTeam.TestRunner\Properties\AssemblyInfo.cs</AssemblyInfoFile>
		</Package>
	</ItemGroup>

	<Target Name="GetNuGet">
		<DownloadFile
	    	Url="https://dist.nuget.org/win-x86-commandline/v4.0.0/NuGet.exe"
	    	LocalFilePath="$(PackagesDirectory)\nuget.exe"/>
	</Target>

	<Target Name="Clear">
	    <RemoveDir Directories="%(Package.Identity)\bin\$(Configuration)" /> 
	</Target>

	<Target Name="CopyDependencies" DependsOnTargets="Clear;GetNuGet">
		<Exec Command="$(PackagesDirectory)\nuget.exe install DevTeam.IoC.Contracts -pre -o $(PackagesDirectory)"/>
		<Exec Command="$(PackagesDirectory)\nuget.exe install DevTeam.IoC -pre -o $(PackagesDirectory)"/>
		<Exec Command="$(PackagesDirectory)\nuget.exe install DevTeam.IoC.Configurations.Json -pre -o $(PackagesDirectory)"/>
		<Exec Command="$(PackagesDirectory)\nuget.exe install Newtonsoft.Json -version 9.0.1 -o $(PackagesDirectory)"/>
		<ItemGroup>
			<Dependency Include="$(PackagesDirectory)\DevTeam.IoC*\lib\netcoreapp1.0\*.dll"/>
			<Dependency Include="$(PackagesDirectory)\Newtonsoft.Json*\lib\netstandard1.0\*.dll"/>
			<OutputDirectory Include="."><Path>$(SolutionDir)DevTeam.TestAdapter\bin\$(Configuration)\pack\netcoreapp1.0\DevTeam.TestAdapter</Path></OutputDirectory> 
		</ItemGroup>		        
		<Copy SourceFiles="@(Dependency)" DestinationFolder="%(OutputDirectory.Path)"/> 
	</Target>	
	
	<Target Name="Build" DependsOnTargets="GetNuGet;CopyDependencies">
		<Message Text="Framework Package Version: $(FrameworkPackageVersion)"/>
		<Message Text="Adapter Package Version: $(AdapterPackageVersion)"/>
		<Message Text="Contracts Package Version: $(ContractsPackageVersion)"/>
		<Message Text="Package Version: $(PackageVersion)"/>
		<Replace
	    	FilePath='%(Package.AssemblyInfoFile)'
			Pattern='(\[assembly:\s(AssemblyVersion|AssemblyFileVersion)\()"(\d+\.\d+\.\d+)"(\)\])'
			Replacement='$1"$(AssemblyVersion)"$4'/>
		<MSBuild Projects="DevTeam.TestTool.sln" Targets="Restore;Build" BuildInParallel="true" Properties="Configuration=$(Configuration);FrameworkPackageVersion=$(FrameworkPackageVersion);ContractsPackageVersion=$(ContractsPackageVersion);PackageVersion=$(PackageVersion)"/>
	</Target>	

	<Target Name="Test" DependsOnTargets="CopyDependencies">
		<Exec Command="dotnet test DevTeam.TestEngine.Tests\DevTeam.TestEngine.Tests.csproj -c:$(Configuration)"/>
	</Target>

	<Target Name="CreatePackages">
		<Exec Command="$(PackagesDirectory)\nuget.exe pack %(Package.Identity)\package.nuspec -Version %(Package.PackageVersion) -OutputDirectory $(PackagesDirectory)" Condition=" '%(Package.CustomPack)' == 'true' "/>
		<Message Text="##teamcity[publishArtifacts '$(PackagesDirectory)\%(Package.FileName)%(Package.Extension).%(Package.PackageVersion).nupkg=>$(PackagesDirectory)']" Condition=" '%(Package.CustomPack)' == 'true' "/>
		<Message Text="##teamcity[publishArtifacts '%(Package.Identity)\bin\$(Configuration)\%(Package.FileName)%(Package.Extension).%(Package.PackageVersion).nupkg=>$(PackagesDirectory)']" Condition=" '%(Package.CustomPack)' == '' "/>
		<Message Text="##teamcity[publishArtifacts 'DevTeam.TestAdapter.Vsix\bin\Release\DevTeamTestAdapter.vsix=>DevTeamTestAdapter.vsix']" Condition=" '%(Package.CustomPack)' == '' "/>
	</Target>

	<Target Name="PushPackagesToNuGet" DependsOnTargets="GetNuGet">
		<Exec Command="$(PackagesDirectory)\nuget.exe push $(PackagesDirectory)\%(Package.FileName)%(Package.Extension).%(Package.PackageVersion).nupkg -ApiKey $(NuGetApiKey) -Source https://nuget.org/"/>
	</Target>

	<Target Name="PushPackagesToMyGet" DependsOnTargets="GetNuGet">
		<Exec Command="$(PackagesDirectory)\nuget.exe push $(PackagesDirectory)\%(Package.FileName)%(Package.Extension).%(Package.PackageVersion).nupkg -ApiKey $(MyGetApiKey) -Source https://www.myget.org/F/dev_team/api/v2/package"/>
	</Target>

</Project>